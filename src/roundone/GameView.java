/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package roundone;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.util.Random;
import javax.swing.JLabel;
import javax.swing.JPanel;

/**
 *
 * @author zjx5013
 */
public class GameView extends javax.swing.JFrame {
    private int timeToWait = 60;
    private JLabel timerLabel;
    GameController parentController;
    NumberPanel[][] theNumberPanelArray;
    
    private JLabel scoreLabel;
    /**
     * Creates new form MainMenuUI
     */
    public GameView(GameController parentController, NumberPanel[][] theNumberPanelArray,
            int timeToWait) {
        this.parentController = parentController;
        this.theNumberPanelArray = theNumberPanelArray;
        this.timeToWait = timeToWait;
        initComponents();
        buildNumberPanels();
        this.theNumberPanelArray[0][0].setSelected(true);
        this.addKeyListener(new GameListener(this.parentController));
    }
    
    private void buildNumberPanels() {  
        
        GridBagConstraints c = new GridBagConstraints();
        c.fill=GridBagConstraints.BOTH;
        c.weightx=1;
        c.weighty=1;
        setLayout(new GridBagLayout());
        JPanel topArea = new JPanel();
        //topArea.setBackground(Color.BLACK);
        topArea.setLayout(new GridBagLayout());
        c.anchor = GridBagConstraints.WEST;
        scoreLabel = new JLabel(parentController.getScore() + " points");
        topArea.add(scoreLabel, c);
        c.anchor = GridBagConstraints.CENTER;
        c.gridx = 1;
        timerLabel = new JLabel(Integer.toString(timeToWait));
        timerLabel.setHorizontalAlignment(JLabel.RIGHT);
        topArea.add(timerLabel, c);
        topArea.setBackground(Color.yellow);
        c.gridwidth = 7;
        c.gridx = 0;
        add(topArea, c);
        c.gridwidth = 1;
        for(int i =0; i < 7; i++) {
            for(int j = 0; j < 7; j++) {
                c.gridx = i;
                c.gridy = j + 1;
                NumberPanel selectedNumberPanel;
                selectedNumberPanel = theNumberPanelArray[i][j];
                add(selectedNumberPanel, c);
            }
        }
    }
    
    void updateScore(int newScore) {
        scoreLabel.setText(newScore + " points.");
    }
    
    void updateTimer(int newTimer) {
        timerLabel.setText(Integer.toString(newTimer));
    }
   
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 419, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 312, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
